openapi: 3.0.0
info:
  title: Todo List API
  description: API for managing todo lists
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  sessionId:
                    type: string
        "400":
          description: Missing email or password
        "500":
          description: User login failed
  /todos:
    get:
      summary: Get all todos
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of todos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Todo"
        "401":
          description: Unauthorized
        "500":
          description: Failed to fetch todos
    post:
      summary: Create a new todo
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewTodo"
      responses:
        "200":
          description: Todo created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "400":
          description: Invalid input
        "500":
          description: Failed to create todo
  /todos/{id}:
    get:
      summary: Get a todo by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Todo fetched successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "404":
          description: Todo not found
        "500":
          description: Failed to fetch todo
    put:
      summary: Update a todo by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewTodo"
      responses:
        "200":
          description: Todo updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "404":
          description: Todo not found
        "500":
          description: Failed to update todo
    delete:
      summary: Delete a todo by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Todo deleted successfully
        "404":
          description: Todo not found
        "500":
          description: Failed to delete todo
components:
  schemas:
    Todo:
      type: object
      properties:
        _id:
          type: string
        task_name:
          type: string
        status:
          type: string
        priority:
          type: string
        due_date:
          type: string
          format: date
    NewTodo:
      type: object
      properties:
        task_name:
          type: string
        status:
          type: string
        priority:
          type: string
        due_date:
          type: string
          format: date
      required:
        - task_name
        - status
        - priority
        - due_date
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
